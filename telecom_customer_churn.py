# -*- coding: utf-8 -*-
"""TF 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ysq3T7l68YAtBXyY2cqxKAmba4awQhHT
"""

import pandas as pd
from sklearn.model_selection import train_test_split

df = pd.read_csv('telecom_customer_churn.csv')

X = pd.get_dummies(df.drop(['Customer Status','Customer ID'], axis=1))
y = df['Customer Status'].apply(lambda x: 1 if x == 'Churned' else 0)

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size =0.2)

X_train.head()

y_train.head()

"""Importing Dependecies"""

from tensorflow.keras.models import Sequential, load_model
from tensorflow.keras.layers import Dense
from sklearn.metrics import accuracy_score

model = Sequential()
model.add(Dense(units=32, activation = 'relu', input_dim = len(X_train.columns)))
model.add(Dense(units = 64, activation = 'relu'))
model.add(Dense(units = 1, activation = 'sigmoid'))

model.compile(loss='binary_crossentropy',optimizer = 'sgd', metrics = 'accuracy')

model.fit(X_train, y_train, epochs=10,batch_size = 32)

y_pred_proba = model.predict(X_test)
y_pred = [1 if val >= 0.5 else 0 for val in y_pred_proba]

accuracy = accuracy_score(y_test, y_pred)
print('Accuracy', accuracy)


